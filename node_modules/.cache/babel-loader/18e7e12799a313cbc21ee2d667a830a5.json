{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Kenzie/React/Grupo2/dihome-capstone-q2g2/src/providers/Properties/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { useAuth } from \"../Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertiesContext = /*#__PURE__*/createContext({});\nexport const PropertiesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [properties, setProperties] = useState([]);\n  const {\n    authToken\n  } = useAuth();\n\n  const getProperties = () => {\n    api.get(\"/properties\").then(response => setProperties(response.data)).catch(err => console.log(err));\n  };\n\n  const addProperty = newProperty => {\n    const newPropertyId = { ...newProperty,\n      id: properties.length + 1\n    };\n    setProperties([...properties, newPropertyId]);\n    api.post(\"/properties\", newProperty).catch(err => console.log(err));\n  };\n\n  const updateProperty = propertyNewData => {\n    setProperties(properties.map(property => property.id === propertyNewData.id ? propertyNewData : property));\n    api.patch(`properties/${propertyNewData.id}`, propertyNewData, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PropertiesContext.Provider, {\n    value: {\n      properties,\n      getProperties,\n      addProperty,\n      updateProperty\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PropertiesProvider, \"4ZGdwNTntb2pbf3/3pMenmi+ooI=\", false, function () {\n  return [useAuth];\n});\n\n_c = PropertiesProvider;\nexport const useProperties = () => {\n  _s2();\n\n  return useContext(PropertiesContext);\n};\n\n_s2(useProperties, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertiesProvider\");","map":{"version":3,"sources":["/home/daniel/Kenzie/React/Grupo2/dihome-capstone-q2g2/src/providers/Properties/index.tsx"],"names":["createContext","useContext","useState","api","useAuth","PropertiesContext","PropertiesProvider","children","properties","setProperties","authToken","getProperties","get","then","response","data","catch","err","console","log","addProperty","newProperty","newPropertyId","id","length","post","updateProperty","propertyNewData","map","property","patch","headers","Authorization","useProperties"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAA+D,OAA/D;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;AAaA,MAAMC,iBAAiB,gBAAGL,aAAa,CACrC,EADqC,CAAvC;AAIA,OAAO,MAAMM,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AAC3E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAiB,EAAjB,CAA5C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBN,OAAO,EAA7B;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1BR,IAAAA,GAAG,CACAS,GADH,CACO,aADP,EAEGC,IAFH,CAESC,QAAD,IAAcL,aAAa,CAACK,QAAQ,CAACC,IAAV,CAFnC,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALD;;AAOA,QAAMG,WAAW,GAAIC,WAAD,IAA+B;AACjD,UAAMC,aAAa,GAAG,EAAE,GAAGD,WAAL;AAAkBE,MAAAA,EAAE,EAAEf,UAAU,CAACgB,MAAX,GAAoB;AAA1C,KAAtB;AACAf,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBc,aAAhB,CAAD,CAAb;AACAnB,IAAAA,GAAG,CAACsB,IAAJ,CAAS,aAAT,EAAwBJ,WAAxB,EAAqCL,KAArC,CAA4CC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAApD;AACD,GAJD;;AAMA,QAAMS,cAAc,GAAIC,eAAD,IAAmC;AACxDlB,IAAAA,aAAa,CACXD,UAAU,CAACoB,GAAX,CAAgBC,QAAD,IACbA,QAAQ,CAACN,EAAT,KAAgBI,eAAe,CAACJ,EAAhC,GAAqCI,eAArC,GAAuDE,QADzD,CADW,CAAb;AAKA1B,IAAAA,GAAG,CACA2B,KADH,CACU,cAAaH,eAAe,CAACJ,EAAG,EAD1C,EAC6CI,eAD7C,EAC8D;AAC1DI,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAAStB,SAAU;AAArC;AADiD,KAD9D,EAIGM,KAJH,CAIUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKD,GAXD;;AAaA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,UADK;AAELG,MAAAA,aAFK;AAGLS,MAAAA,WAHK;AAILM,MAAAA;AAJK,KADT;AAAA,cAQGnB;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3CM;;GAAMD,kB;UAGWF,O;;;KAHXE,kB;AA6Cb,OAAO,MAAM2B,aAAa,GAAG;AAAA;;AAAA,SAAMhC,UAAU,CAACI,iBAAD,CAAhB;AAAA,CAAtB;;IAAM4B,a","sourcesContent":["import { createContext, useContext, useState, ReactNode } from \"react\";\nimport api from \"../../services/api\";\nimport { PropertyData } from \"../../assets/Types/property\";\nimport { useAuth } from \"../Authentication\";\n\ninterface PropertiesProviderProps {\n  children: ReactNode;\n}\n\ninterface PropertiesProviderData {\n  properties: PropertyData[];\n  getProperties: () => void;\n  addProperty: (newProperty: PropertyData) => void;\n  updateProperty: (newProperty: PropertyData) => void;\n}\n\nconst PropertiesContext = createContext<PropertiesProviderData>(\n  {} as PropertiesProviderData\n);\n\nexport const PropertiesProvider = ({ children }: PropertiesProviderProps) => {\n  const [properties, setProperties] = useState<PropertyData[]>([]);\n\n  const { authToken } = useAuth();\n\n  const getProperties = () => {\n    api\n      .get(\"/properties\")\n      .then((response) => setProperties(response.data))\n      .catch((err) => console.log(err));\n  };\n\n  const addProperty = (newProperty: PropertyData) => {\n    const newPropertyId = { ...newProperty, id: properties.length + 1 };\n    setProperties([...properties, newPropertyId]);\n    api.post(\"/properties\", newProperty).catch((err) => console.log(err));\n  };\n\n  const updateProperty = (propertyNewData: PropertyData) => {\n    setProperties(\n      properties.map((property) =>\n        property.id === propertyNewData.id ? propertyNewData : property\n      )\n    );\n    api\n      .patch(`properties/${propertyNewData.id}`, propertyNewData, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <PropertiesContext.Provider\n      value={{\n        properties,\n        getProperties,\n        addProperty,\n        updateProperty,\n      }}\n    >\n      {children}\n    </PropertiesContext.Provider>\n  );\n};\n\nexport const useProperties = () => useContext(PropertiesContext);\n"]},"metadata":{},"sourceType":"module"}