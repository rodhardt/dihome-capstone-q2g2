{"ast":null,"code":"var _jsxFileName = \"/home/rodhardt/Documents/Q2/new-dihome/dihome-capstone-q2g2/src/components/Consultant/Buttons/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { MdOutlineFileDownloadDone } from \"react-icons/md\";\nimport { ImCancelCircle } from \"react-icons/im\";\nimport { ConsultantButtonsContainer } from \"./styles\";\nimport { useProperties } from \"../../../providers/Properties\";\nimport ConfirmedModal from \"../../ConfirmedModal\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConsultantButtons = ({\n  propertyToRender\n}) => {\n  _s();\n\n  const {\n    updateProperty\n  } = useProperties();\n  const [isOpenDenyModalInformation, setIsOpenDenyModalInformation] = useState(false);\n  const [isOpenApproveModalInformation, setIsOpenApproveModalInformation] = useState(false);\n\n  const handleApprove = () => {\n    setIsOpenApproveModalInformation(true);\n  };\n\n  const handleDeny = () => {\n    setIsOpenDenyModalInformation(true);\n  };\n\n  const denyModalInformation = {\n    title: \"Publicação não aprovada.\",\n    closeFunction: () => setIsOpenDenyModalInformation(false),\n    message: \"Descreva o porquê da propriedade não poder ser aprovada.\",\n    textareaPlaceholder: \"Digite aqui...\",\n    confirmButton: {\n      confirmText: \"enviar\",\n      confirmFunction: () => {}\n    },\n    cancelButton: {\n      cancelText: \"voltar\",\n      cancelFunction: () => {}\n    }\n  };\n  const approveModalInformation = {\n    title: \"Aprovar publicação.\",\n    closeFunction: () => setIsOpenApproveModalInformation(false),\n    message: \"Você aprova a publicação desta propriedade?\",\n    confirmButton: {\n      confirmText: \"aprovar\",\n      confirmFunction: () => {\n        const newPropertyData = {\n          id: propertyToRender.id,\n          announcerId: propertyToRender.announcerId,\n          consultantStatus: \"aprovado\",\n          announcerStatus: propertyToRender.announcerStatus,\n          viewsCount: propertyToRender.viewsCount,\n          bookmarkCount: propertyToRender.bookmarkCount,\n          title: propertyToRender.title,\n          street: propertyToRender.street,\n          state: propertyToRender.state,\n          city: propertyToRender.city,\n          district: propertyToRender.district,\n          number: propertyToRender.number,\n          type: propertyToRender.type,\n          goal: propertyToRender.goal,\n          dorms: propertyToRender.dorms,\n          parking: propertyToRender.parking,\n          bathrooms: propertyToRender.bathrooms,\n          houseArea: propertyToRender.houseArea,\n          landArea: propertyToRender.landArea,\n          description: propertyToRender.description,\n          mainImage: propertyToRender.mainImage,\n          images: propertyToRender.images,\n          price: propertyToRender.price\n        };\n        updateProperty(newPropertyData);\n      }\n    },\n    cancelButton: {\n      cancelText: \"voltar\",\n      cancelFunction: () => {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConsultantButtonsContainer, {\n    children: [isOpenDenyModalInformation && /*#__PURE__*/_jsxDEV(ConfirmedModal, {\n      modalContent: denyModalInformation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), isOpenApproveModalInformation && /*#__PURE__*/_jsxDEV(ConfirmedModal, {\n      modalContent: approveModalInformation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm\",\n      type: \"button\",\n      onClick: handleApprove,\n      children: /*#__PURE__*/_jsxDEV(MdOutlineFileDownloadDone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deny\",\n      type: \"button\",\n      onClick: handleDeny,\n      children: /*#__PURE__*/_jsxDEV(ImCancelCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConsultantButtons, \"hGgBK+WzJ8HS/ag/7TzrM+f930g=\", false, function () {\n  return [useProperties];\n});\n\n_c = ConsultantButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConsultantButtons\");","map":{"version":3,"sources":["/home/rodhardt/Documents/Q2/new-dihome/dihome-capstone-q2g2/src/components/Consultant/Buttons/index.tsx"],"names":["MdOutlineFileDownloadDone","ImCancelCircle","ConsultantButtonsContainer","useProperties","ConfirmedModal","useState","ConsultantButtons","propertyToRender","updateProperty","isOpenDenyModalInformation","setIsOpenDenyModalInformation","isOpenApproveModalInformation","setIsOpenApproveModalInformation","handleApprove","handleDeny","denyModalInformation","title","closeFunction","message","textareaPlaceholder","confirmButton","confirmText","confirmFunction","cancelButton","cancelText","cancelFunction","approveModalInformation","newPropertyData","id","announcerId","consultantStatus","announcerStatus","viewsCount","bookmarkCount","street","state","city","district","number","type","goal","dorms","parking","bathrooms","houseArea","landArea","description","mainImage","images","price"],"mappings":"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","sourcesContent":["import { MdOutlineFileDownloadDone } from \"react-icons/md\";\nimport { ImCancelCircle } from \"react-icons/im\";\nimport { ConsultantButtonsContainer } from \"./styles\";\nimport { PropertyData } from \"../../../assets/Types/property\";\nimport { useProperties } from \"../../../providers/Properties\";\nimport ConfirmedModal from \"../../ConfirmedModal\";\nimport { useState } from \"react\";\n\ninterface ConsultantButtonsProps {\n  propertyToRender: PropertyData;\n}\n\nexport const ConsultantButtons = ({\n  propertyToRender,\n}: ConsultantButtonsProps) => {\n  const { updateProperty } = useProperties();\n  const [isOpenDenyModalInformation, setIsOpenDenyModalInformation] =\n    useState(false);\n  const [isOpenApproveModalInformation, setIsOpenApproveModalInformation] =\n    useState(false);\n\n  const handleApprove = () => {\n    setIsOpenApproveModalInformation(true);\n  };\n\n  const handleDeny = () => {\n    setIsOpenDenyModalInformation(true);\n  };\n\n  const denyModalInformation = {\n    title: \"Publicação não aprovada.\",\n    closeFunction: () => setIsOpenDenyModalInformation(false),\n    message: \"Descreva o porquê da propriedade não poder ser aprovada.\",\n    textareaPlaceholder: \"Digite aqui...\",\n    confirmButton: {\n      confirmText: \"enviar\",\n      confirmFunction: () => {},\n    },\n    cancelButton: {\n      cancelText: \"voltar\",\n      cancelFunction: () => {},\n    },\n  };\n\n  const approveModalInformation = {\n    title: \"Aprovar publicação.\",\n    closeFunction: () => setIsOpenApproveModalInformation(false),\n    message: \"Você aprova a publicação desta propriedade?\",\n    confirmButton: {\n      confirmText: \"aprovar\",\n      confirmFunction: () => {\n        const newPropertyData = {\n          id: propertyToRender.id,\n          announcerId: propertyToRender.announcerId,\n          consultantStatus: \"aprovado\",\n          announcerStatus: propertyToRender.announcerStatus,\n          viewsCount: propertyToRender.viewsCount,\n          bookmarkCount: propertyToRender.bookmarkCount,\n          title: propertyToRender.title,\n          street: propertyToRender.street,\n          state: propertyToRender.state,\n          city: propertyToRender.city,\n          district: propertyToRender.district,\n          number: propertyToRender.number,\n          type: propertyToRender.type,\n          goal: propertyToRender.goal,\n          dorms: propertyToRender.dorms,\n          parking: propertyToRender.parking,\n          bathrooms: propertyToRender.bathrooms,\n          houseArea: propertyToRender.houseArea,\n          landArea: propertyToRender.landArea,\n          description: propertyToRender.description,\n          mainImage: propertyToRender.mainImage,\n          images: propertyToRender.images,\n          price: propertyToRender.price,\n        };\n        updateProperty(newPropertyData);\n      },\n    },\n    cancelButton: {\n      cancelText: \"voltar\",\n      cancelFunction: () => {},\n    },\n  };\n\n  return (\n    <ConsultantButtonsContainer>\n      {isOpenDenyModalInformation && (\n        <ConfirmedModal modalContent={denyModalInformation} />\n      )}\n      {isOpenApproveModalInformation && (\n        <ConfirmedModal modalContent={approveModalInformation} />\n      )}\n\n      <button className=\"confirm\" type=\"button\" onClick={handleApprove}>\n        <MdOutlineFileDownloadDone />\n      </button>\n      <button className=\"deny\" type=\"button\" onClick={handleDeny}>\n        <ImCancelCircle />\n      </button>\n    </ConsultantButtonsContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}