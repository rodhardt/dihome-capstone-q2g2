{"ast":null,"code":"var _jsxFileName = \"/home/rodhardt/Documents/Q2/new-dihome/dihome-capstone-q2g2/src/components/Profile/UserEdit/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { UserEditStyled } from \"./styles\";\nimport { useAuth } from \"../../../providers/Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEdit({\n  closeModal\n}) {\n  _s();\n\n  const {\n    userInfo,\n    updateUser\n  } = useAuth();\n  const [inputName, setInputName] = useState(userInfo.name);\n  const [inputEmail, setInputEmail] = useState(userInfo.email);\n  const [inputTelephone, setInputTelephone] = useState(userInfo.telephone);\n\n  const handleInputName = () => {\n    if (inputName === userInfo.name) {\n      setInputName(\"\");\n    }\n  };\n\n  const handleInputEmail = () => {\n    if (inputEmail === userInfo.email) {\n      setInputEmail(\"\");\n    }\n  };\n\n  const handleInputTelephone = () => {\n    if (inputTelephone === userInfo.telephone) {\n      setInputTelephone(\"\");\n    }\n  };\n\n  const submitChanges = () => {\n    const newUserInfo = {\n      id: userInfo.id,\n      name: inputName,\n      email: inputEmail,\n      telephone: inputTelephone,\n      consultant: userInfo.consultant,\n      announcedProperties: userInfo.announcedProperties,\n      bookmarkedProperties: userInfo.bookmarkedProperties,\n      subscriptionType: userInfo.subscriptionType,\n      markedDates: userInfo.markedDates\n    };\n    updateUser(newUserInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserEditStyled, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Alterar Informa\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => closeModal(),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-name\",\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-name\",\n            value: inputName,\n            onClick: () => handleInputName(),\n            onChange: evt => setInputName(evt.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-email\",\n            value: inputEmail,\n            onClick: () => handleInputEmail(),\n            onChange: evt => setInputEmail(evt.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-telephone\",\n            children: \"Telefone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input-telephone\",\n            value: inputTelephone,\n            onClick: () => handleInputTelephone(),\n            onChange: evt => setInputTelephone(evt.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-button\",\n          onClick: () => {\n            submitChanges();\n            closeModal();\n          },\n          children: \"Alterar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => {\n            closeModal();\n          },\n          children: \"cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEdit, \"b3OdTUgWsMtISBAzXCflfAqbZp4=\", false, function () {\n  return [useAuth];\n});\n\n_c = UserEdit;\nexport default UserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"sources":["/home/rodhardt/Documents/Q2/new-dihome/dihome-capstone-q2g2/src/components/Profile/UserEdit/index.tsx"],"names":["useState","UserEditStyled","useAuth","UserEdit","closeModal","userInfo","updateUser","inputName","setInputName","name","inputEmail","setInputEmail","email","inputTelephone","setInputTelephone","telephone","handleInputName","handleInputEmail","handleInputTelephone","submitChanges","newUserInfo","id","consultant","announcedProperties","bookmarkedProperties","subscriptionType","markedDates","evt","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { UserEditStyled } from \"./styles\";\n\nimport { useAuth } from \"../../../providers/Authentication\";\n\ninterface UserEditProps {\n  closeModal: () => void;\n}\n\nfunction UserEdit({ closeModal }: UserEditProps) {\n  const { userInfo, updateUser } = useAuth();\n\n  const [inputName, setInputName] = useState(userInfo.name);\n  const [inputEmail, setInputEmail] = useState(userInfo.email);\n  const [inputTelephone, setInputTelephone] = useState(userInfo.telephone);\n\n  const handleInputName = () => {\n    if (inputName === userInfo.name) {\n      setInputName(\"\");\n    }\n  };\n  const handleInputEmail = () => {\n    if (inputEmail === userInfo.email) {\n      setInputEmail(\"\");\n    }\n  };\n  const handleInputTelephone = () => {\n    if (inputTelephone === userInfo.telephone) {\n      setInputTelephone(\"\");\n    }\n  };\n\n  const submitChanges = () => {\n    const newUserInfo = {\n      id: userInfo.id,\n      name: inputName,\n      email: inputEmail,\n      telephone: inputTelephone,\n      consultant: userInfo.consultant,\n      announcedProperties: userInfo.announcedProperties,\n      bookmarkedProperties: userInfo.bookmarkedProperties,\n      subscriptionType: userInfo.subscriptionType,\n      markedDates: userInfo.markedDates,\n    };\n    updateUser(newUserInfo);\n  };\n\n  return (\n    <UserEditStyled>\n      <div className=\"modal-card\">\n        <header>\n          <h4>Alterar Informações</h4>\n\n          <button className=\"close-button\" onClick={() => closeModal()}>\n            X\n          </button>\n        </header>\n        <div className=\"form-container\">\n          <div className=\"input-container\">\n            <label htmlFor=\"input-name\">Nome</label>\n            <input\n              id=\"input-name\"\n              value={inputName}\n              onClick={() => handleInputName()}\n              onChange={(evt) => setInputName(evt.target.value)}\n            />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"input-email\">E-mail</label>\n            <input\n              id=\"input-email\"\n              value={inputEmail}\n              onClick={() => handleInputEmail()}\n              onChange={(evt) => setInputEmail(evt.target.value)}\n            />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"input-telephone\">Telefone</label>\n            <input\n              id=\"input-telephone\"\n              value={inputTelephone}\n              onClick={() => handleInputTelephone()}\n              onChange={(evt) => setInputTelephone(evt.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"buttons-container\">\n          <button\n            className=\"confirm-button\"\n            onClick={() => {\n              submitChanges();\n              closeModal();\n            }}\n          >\n            Alterar\n          </button>\n          <button\n            className=\"cancel-button\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            cancelar\n          </button>\n        </div>\n      </div>\n    </UserEditStyled>\n  );\n}\n\nexport default UserEdit;\n"]},"metadata":{},"sourceType":"module"}